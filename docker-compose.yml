version: '3.8'

services:
  bot:
    image: bot_image
    build:
      context: ./bot_image
    depends_on:
      - db
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - SSH_HOST=${SSH_HOST}
      - SSH_PORT=${SSH_PORT}
      - SSH_USERNAME=${SSH_USERNAME}
      - SSH_PASSWORD=${SSH_PASSWORD}
      - POSTGRESQL_USER=${POSTGRESQL_USER}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_HOST=${POSTGRESQL_HOST}
      - POSTGRESQL_PORT=${POSTGRESQL_PORT}
      - POSTGRESQL_DB=${POSTGRES_DB}
    restart: always

  db:
    image: db_image
    container_name: db_container
    build:
      context: ./db_image
    environment:
      - POSTGRES_USER=${POSTGRESQL_USER}
      - POSTGRES_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRES_DB=${POSTGRESQL_DB}
    ports: ["5432:5432"]
    restart: always

  db_slave:
    image: db_repl_image
    build:
      context: ./db_repl_image
    depends_on:
      - db
    ports:
      - "5433:5432"
    restart: always
    environment: 
      - PGUSER=${POSTGRESQL_REPL_USERNAME}
      - PGPASSWORD=${POSTGRESQL_REPL_PASSWORD}
    command: | 
      bash -c "
      until pg_basebackup -R -h db -U repl_user -D /var/lib/postgresql/data -P   
      do 
      echo 'Waiting for primary to connect...' 
      sleep 1s 
      done 
      echo 'Backup done, starting replica...' 
      chmod 0700 /var/lib/postgresql/data 
      echo 'Chmod is completed'
      postgres
      "
